"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1388],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),h=i,m=p["".concat(s,".").concat(h)]||p[h]||u[h]||a;return r?n.createElement(m,o(o({ref:t},d),{},{components:r})):n.createElement(m,o({ref:t},d))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},207:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={},o="Encoders",l={unversionedId:"Using Encoders/encoders",id:"version-v3.0.0/Using Encoders/encoders",title:"Encoders",description:"Design files and documentation for power wheelchair encoders compatible with the LUCI sensor system.",source:"@site/versioned_docs/version-v3.0.0/2_Using Encoders/1_encoders.md",sourceDirName:"2_Using Encoders",slug:"/Using Encoders/encoders",permalink:"/luci-sdk-docs/Using Encoders/encoders",draft:!1,tags:[],version:"v3.0.0",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"luci_transforms",permalink:"/luci-sdk-docs/ROS2 SDK/Packages/Transforms/luci_transforms_package"},next:{title:"Shield",permalink:"/luci-sdk-docs/Using Encoders/shield"}},s={},c=[{value:"What is this repository for?",id:"what-is-this-repository-for",level:2},{value:"Features",id:"features",level:2},{value:"How do I get set up?",id:"how-do-i-get-set-up",level:2},{value:"SDK Install",id:"sdk-install",level:3},{value:"Encoder Setup",id:"encoder-setup",level:3},{value:"Supported Chairs",id:"supported-chairs",level:2},{value:"DISCLAIMER",id:"disclaimer",level:3},{value:"Direct Mount Design",id:"direct-mount-design",level:3}],d={toc:c};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"encoders"},"Encoders"),(0,i.kt)("p",null,"Design files and documentation for power wheelchair encoders compatible with the LUCI sensor system.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lucimobility/luci-sdk-encoders"},"GitHub repo")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Shield",src:r(6505).Z,width:"3366",height:"1291"})),(0,i.kt)("h2",{id:"what-is-this-repository-for"},"What is this repository for?"),(0,i.kt)("p",null,"This repo is for the public release of an encoder system for power wheelchairs that is compatible with the ",(0,i.kt)("a",{parentName:"p",href:"https://luci.com/"},"LUCI")," system and ",(0,i.kt)("a",{parentName:"p",href:"https://lucimobility.github.io/luci-ros2-sdk-docs/"},"LUCI SDK"),"."),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Provide main drive wheel position"),(0,i.kt)("li",{parentName:"ol"},"Provide caster angle position")),(0,i.kt)("h2",{id:"how-do-i-get-set-up"},"How do I get set up?"),(0,i.kt)("h3",{id:"sdk-install"},"SDK Install"),(0,i.kt)("p",null,"If you are a researcher with access to an installed LUCI unit you will want to follow the getting started instructions in the ",(0,i.kt)("a",{parentName:"p",href:"https://lucimobility.github.io/luci-ros2-sdk-docs/How-To/Getting-Started/docker"},"SDK")," in order to get the LUCI data streams exposed. "),(0,i.kt)("h3",{id:"encoder-setup"},"Encoder Setup"),(0,i.kt)("p",null,"We have designed the printed parts to support the following encoder ",(0,i.kt)("a",{parentName:"p",href:"https://www.amazon.com/gp/product/B094F8H591/ref=ppx_yo_dt_b_search_asin_title?ie=UTF8&psc=1"},"AS5600 boards"),"."),(0,i.kt)("p",null,"Once you are successfully reading data from LUCI through our SDK you are ready to set up the encoder system.\nThis can be broken down into a few basic steps."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Find the correct sheet metal designs for your specific chair",(0,i.kt)("b",null,"Note: Not all chair models are currently supported. If your chair model is not available please consider editing our designs and pushing them up here as a pull request. We actively encourage new model support.")),(0,i.kt)("li",{parentName:"ol"},"Follow the mounting guide to install your specific sheet metal."),(0,i.kt)("li",{parentName:"ol"},"Install the diamagnetic magnets on all the casters and main drive wheels that you would like to track. Hot glue works best for this."),(0,i.kt)("li",{parentName:"ol"},"Install encoders into the 3D printed parts"),(0,i.kt)("li",{parentName:"ol"},"Mount the 3D printed parts onto casters and sheet metal"),(0,i.kt)("li",{parentName:"ol"},"Mount the shield onto an arduino uno running the provided firmware. ",(0,i.kt)("b",null,"NOTE: The current shield will short on the arduino board if its leads are not covered in electrical tape!")),(0,i.kt)("li",{parentName:"ol"},"Open the USB link hub on the back of your LUCI unit and plug in the arduino uno"),(0,i.kt)("li",{parentName:"ol"},"Power cycle the chair/ LUCI unit")),(0,i.kt)("p",null,"Once plugged in LUCI should automatically start streaming encoder data through the luci_grpc_node in the SDK. "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Assembly",src:r(2098).Z,width:"566",height:"573"})),(0,i.kt)("h2",{id:"supported-chairs"},"Supported Chairs"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Chair"),(0,i.kt)("th",{parentName:"tr",align:null},"Link"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Quickie 300M"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Quickie_300M"},"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Quickie_300M"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Quickie 500M"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Quickie_500M"},"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Quickie_500M"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Permobil F3"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Permobil_F3"},"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Permobil_F3"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Permobil M3"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Permobil_M3"},"https://github.com/lucimobility/luci-sdk-encoders/tree/main/Hardware/Permobil_M3"))))),(0,i.kt)("h3",{id:"disclaimer"},"DISCLAIMER"),(0,i.kt)("p",null,"These designs and files are made public for research and are NOT considered a final product or design. They are internal dev tools that LUCI uses and is willing to make public to help push advancements in the wheelchair space. As this is a public repo that hopefully benefits from third party design changes we take NO responsibility for any potential damage or malfunctions caused from these designs."),(0,i.kt)("h3",{id:"direct-mount-design"},"Direct Mount Design"),(0,i.kt)("p",null,"If you are using the new LUCI direct drive design please be aware that they do not currently support caster wheel encoders in the firmware."))}u.isMDXComponent=!0},2098:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Encoder-a070895853cf5f6034b0869c61977667.png"},6505:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Shiled-ad3a1eac1d928691123a93d4a4e364c1.png"}}]);