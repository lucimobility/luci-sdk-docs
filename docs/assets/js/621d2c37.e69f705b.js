"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9061],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},i="luci_basic_teleop",l={unversionedId:"ROS2 SDK/Packages/Basic Teleop/teleop",id:"version-v3.0.0/ROS2 SDK/Packages/Basic Teleop/teleop",title:"luci_basic_teleop",description:"The lucibasicteleop package is an example node that publishes messages that",source:"@site/versioned_docs/version-v3.0.0/1_ROS2 SDK/3_Packages/Basic Teleop/teleop.md",sourceDirName:"1_ROS2 SDK/3_Packages/Basic Teleop",slug:"/ROS2 SDK/Packages/Basic Teleop/teleop",permalink:"/luci-sdk-docs/ROS2 SDK/Packages/Basic Teleop/teleop",draft:!1,tags:[],version:"v3.0.0",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SLAM (Simultaneous Localization and Mapping)",permalink:"/luci-sdk-docs/ROS2 SDK/How-To/Examples/slam"},next:{title:"luci_grpc_interface",permalink:"/luci-sdk-docs/ROS2 SDK/Packages/GRPC Interface/grpc_package"}},s={},c=[{value:"Usage",id:"usage",level:2},{value:"More Info",id:"more-info",level:2},{value:"Service Calls to Control Joystick Input###",id:"service-calls-to-control-joystick-input",level:3},{value:"LuciJoystick Message Types",id:"lucijoystick-message-types",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"luci_basic_teleop"},"luci_basic_teleop"),(0,r.kt)("p",null,"The luci_basic_teleop package is an example node that publishes messages that\ncommands LUCI to drive by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"arrow keys")," on your keyboard.\nUse ",(0,r.kt)("inlineCode",{parentName:"p"},"ctrl+c")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"q")," to terminate.\nThis package was only tested to be compatible on a UNIX based Linux OS.\nIf you are running this in our docker container, it will work.\nNOTE: This is only a package that is intended to be used with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lucimobility/luci-ros2-sdk"},"luci_ros2_sdk")),(0,r.kt)("p",null,"Node name: ",(0,r.kt)("inlineCode",{parentName:"p"},"/keyboard_control_node")),(0,r.kt)("p",null,"Topic name: ",(0,r.kt)("inlineCode",{parentName:"p"},"luci/remote_joystick")),(0,r.kt)("p",null,"Topic message type: ",(0,r.kt)("inlineCode",{parentName:"p"},"[luci_messages/msg/LuciJoystick]")),(0,r.kt)("p",null,"Service Call when started: ",(0,r.kt)("inlineCode",{parentName:"p"},"/luci/set_auto_remote_input std_srvs/srv/Empty")),(0,r.kt)("p",null,"Service Call when terminated: ",(0,r.kt)("inlineCode",{parentName:"p"},"/luci/remove_auto_remote_input std_srvs/srv/Empty")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"After correctly sourcing ROS2, Run the following to start the node:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ros2 run luci_basic_teleop keyboard_control_node")),(0,r.kt)("p",null,"This node was created to communicate with the ",(0,r.kt)("inlineCode",{parentName:"p"},"luci_grpc_interface")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Package"),(0,r.kt)("th",{parentName:"tr",align:null},"Node"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"luci_basic_teleop"),(0,r.kt)("td",{parentName:"tr",align:null},"keyboard_control_node")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Topics"),(0,r.kt)("th",{parentName:"tr",align:null},"Subscription / Publish"),(0,r.kt)("th",{parentName:"tr",align:null},"Message Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"luci/remote_joystick"),(0,r.kt)("td",{parentName:"tr",align:null},"publish"),(0,r.kt)("td",{parentName:"tr",align:null},"luci_messages::msg::LuciJoystick"),(0,r.kt)("td",{parentName:"tr",align:null},"The remote JS values that are processed by LUCI for remote drive operations")))),(0,r.kt)("h2",{id:"more-info"},"More Info"),(0,r.kt)("h3",{id:"service-calls-to-control-joystick-input"},"Service Calls to Control Joystick Input###"),(0,r.kt)("p",null,"When this node starts, it first sends a ros2 service call to LUCI that enables remote control of the chair."),(0,r.kt)("p",null,"This call ",(0,r.kt)("inlineCode",{parentName:"p"},"/luci/set_auto_remote_input std_srvs/srv/Empty")," disables the physical joystick on the chair and\nonly allows for remote control."),(0,r.kt)("p",null,"When this node is killed it re-enables the physical joystick and disables\nremote control by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"/luci/remove_auto_remote_input std_srvs/srv/Empty"),"."),(0,r.kt)("p",null,"If somehow the system crashes or loses connection and the chair gets stuck in a joystick input state that\nyou don't want, you can always run a service call from the terminal to change the state."),(0,r.kt)("p",null,"For example:\n",(0,r.kt)("inlineCode",{parentName:"p"},"ros2 service call /luci/set_auto_remote_input std_srvs/srv/Empty")," to enable remote control"),(0,r.kt)("p",null,"or"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ros2 service call /luci/remove_auto_remote_input std_srvs/srv/Empty")," to disbale remote control"),(0,r.kt)("h3",{id:"lucijoystick-message-types"},"LuciJoystick Message Types"),(0,r.kt)("p",null,"The LuciJoystick message contains the following data:\n| Data Type | Data Range|\n|-----------|-----------|\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"int32 forward_back")," | ","[-100, 100]"," |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"int32 left_right"),"   | ","[-100, 100]"," |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"int32 joystick_zone"),"| ","[0 - 8]"," |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"int32 input_source")," | ","[0 - 4]"," |"),(0,r.kt)("p",null,"The integers for JoystickZone and InoutSource corespond with the following enums:\nenum JoystickZone {\nFront = 0;\nFrontLeft = 1;\nFrontRight = 2;\nLeft = 3;\nRight = 4;\nBackLeft = 5;\nBackRight = 6;\nBack = 7;\nOrigin = 8;\n}"),(0,r.kt)("p",null,"enum InputSource {\nRampAssist = 0;\nRemote = 1;\nWDI = 2;\nChairVirtual = 3;\nChairPhysical = 4;\n}"),(0,r.kt)("p",null,"More info on the LuciMessages package can be found at: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lucimobility/luci-ros2-msgs"},"https://github.com/lucimobility/luci-ros2-msgs")))}u.isMDXComponent=!0}}]);